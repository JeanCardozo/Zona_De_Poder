<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <!-- Tailwind CSS -->
    <link
      href="https://cdnjs.cloudflare.com/ajax/libs/tailwindcss/2.2.16/tailwind.min.css"
      rel="stylesheet"
    />
    <link rel="stylesheet" href="../../../../src/output.css" />
    <link
      href="https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css"
      rel="stylesheet"
    />
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <title>Ver Usuarios</title>
  </head>
  <body class="bg-fondo">
    <%- include('../plantillas/navbar.ejs') %>

    <div class="px-10 mx-auto mt-4 p-5">
      <div class="flex justify-start gap-2 mb-4">
        <a
          href="/create_usuarios"
          class="btn mt-4 inline-flex items-center border-green-400 bg-green-600 text-white font-semibold py-2 px-4 rounded-md hover:bg-green-700"
        >
          <i class="bx bx-plus-circle mr-2 br-md"></i> Crear Usuario
        </a>
        <a
          href="/index_admin"
          class="btn mt-4 inline-flex items-center border border-red-400 bg-red-600 text-white font-semibold py-2 px-4 rounded-md hover:bg-red-700"
        >
          Volver
        </a>
      </div>
      <div class="max-w-7xl mx-auto p-4">
        <div class="overflow-x-auto">
          <table
            class="min-w-full table-auto table-fixed sm:text-sm text-left text-gray-500 dark:text-gray-400"
          >
            <thead class="text-xs bg-gray-500 text-white">
              <tr>
                <% const headers = ["ID", "NOMBRE", "CORREO", "ROL", "ESTADO",
                "ACCIONES"]; %> <% headers.forEach(header => { %>
                <th scope="col" class="px-4 py-6 text-center"><%= header %></th>
                <% }); %>
              </tr>
            </thead>
            <tbody
              class="bg-white divide-y divide-gray-200 text-center"
            ></tbody>
          </table>
        </div>
        <div id="pagination" class="w-full flex justify-center"></div>
      </div>
    </div>

    <script defer>
      const divPagination = document.getElementById("pagination");
      let datos = [];
      let tableRows = [];
      const itemsPorPagina = 5;

      async function getData() {
        try {
          const response = await fetch("/verUsuarios", {
            method: "POST",
          });

          if (!response.ok) {
            throw new Error(
              "La solicitud no fue exitosa: " + response.statusText
            );
          }

          return await response.json();
        } catch (error) {
          console.error("Error al obtener datos:", error);
          return [];
        }
      }

      async function inicializar() {
        datos = await getData();

        const totalPages = Math.ceil(datos.length / itemsPorPagina);
        generatePagination(totalPages);
        mostrarPagina(1);
      }

      function generatePagination(totalPages) {
        divPagination.innerHTML = Array.from(
          { length: totalPages },
          (_, i) =>
            `<button class="border border-gray-300 bg-gray-500 hover:bg-gray-600 text-white font-semibold rounded-md px-3 py-1.5 m-1 transition duration-300 ease-in-out transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-gray-400 focus:ring-opacity-50 shadow-md" data-page="${
              i + 1
            }">${i + 1}</button>`
        ).join("");

        divPagination.addEventListener("click", (e) => {
          if (e.target.tagName === "BUTTON") {
            mostrarPagina(parseInt(e.target.dataset.page));
          }
        });
      }

      function mostrarPagina(numeroPagina) {
        const inicio = (numeroPagina - 1) * itemsPorPagina;
        const fin = inicio + itemsPorPagina;
        const datosParaMostrar = datos.slice(inicio, fin);

        const tbody = document.querySelector("tbody");
        tbody.innerHTML = datosParaMostrar
          .map(
            (dato, index) => `
        <tr class="py-0 text-xm max-w-sm text-center hover:bg-gray-100 ${
          index % 2 === 0 ? "bg-gray-100" : ""
        }">
          <td class="p-2">${dato.id}</td>
          <td class="p-2">${dato.nombre}</td>
          <td class="p-2">${dato.correo}</td>
          <td class="p-2">${dato.rol}</td>
          <td class="p-2">${dato.estado}</td>
          <td class="py-4 text-center flex items-center justify-around gap-2">
            <a href="/actualizar_usuarios/${
              dato.id
            }" class="px-2 py-1 bg-blue-500 text-white rounded-md hover:bg-blue-700">Editar</a>
            <button data-user-id="${
              dato.id
            }" class="px-2 py-1 bg-red-500 text-white rounded-md eliminar-usuario hover:bg-red-700">Eliminar</button>
          </td>
        </tr>
      `
          )
          .join("");

        tableRows = Array.from(tbody.querySelectorAll("tr"));
      }

      inicializar();
    </script>

    <script>
      document.addEventListener("DOMContentLoaded", function () {
        const searchInput = document.getElementById("searchInput");

        searchInput.addEventListener("keyup", function () {
          const query = searchInput.value.toLowerCase();

          tableRows.forEach((row) => {
            const cells = Array.from(row.cells);
            const matchesQuery = cells.some((cell) =>
              cell.textContent.toLowerCase().includes(query)
            );
            row.style.display = matchesQuery ? "" : "none";
          });
        });
      });
    </script>

    <script>
      document.body.addEventListener("click", function (event) {
        if (event.target.classList.contains("eliminar-usuario")) {
          const userId = event.target.dataset.userId;

          Swal.fire({
            title: "¿Estás seguro?",
            text: "Esta acción no se puede deshacer.",
            icon: "warning",
            showCancelButton: true,
            confirmButtonText: "Eliminar",
            cancelButtonText: "Cancelar",
          }).then((result) => {
            if (result.isConfirmed) {
              fetch(`/eliminar_usuario/${userId}`, {
                method: "DELETE",
              })
                .then((response) => {
                  if (response.ok) {
                    Swal.fire(
                      "Eliminado",
                      "El usuario ha sido eliminado correctamente.",
                      "success"
                    );
                    inicializar();
                  } else {
                    Swal.fire(
                      "Error",
                      "Hubo un problema al eliminar el usuario.",
                      "error"
                    );
                  }
                })
                .catch((error) => {
                  Swal.fire(
                    "Error",
                    "Hubo un error al procesar la solicitud.",
                    "error"
                  );
                });
            }
          });
        }
      });
    </script>
  </body>
</html>
