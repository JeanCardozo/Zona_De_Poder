<!DOCTYPE html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      rel="shortcut icon"
      href="https://raw.githubusercontent.com/JeanCardozo/audios/main/logotipo.jpg"
    />
    <title>Selecciona tu Plan de Mensualidad</title>
    <link
      href="https://cdn.jsdelivr.net/npm/tailwindcss@2.0.3/dist/tailwind.min.css"
      rel="stylesheet"
    />

    <!-- SDK MercadoPago.js -->
    <script src="https://sdk.mercadopago.com/js/v2"></script>
  </head>
  <body class="bg-gray-50 text-gray-800 font-sans">
    <div class="container mx-auto px-4 py-6 max-w-3xl">
      <a
        href="/cancelar?tempRegistroId=<%= tempRegistroId %>"
        class="text-sm text-gray-500 hover:text-red-600 transition duration-300"
        >Cancelar</a
      >
      <h1 class="text-3xl font-bold text-center my-6 text-gray-800">
        Selecciona tu Plan de Mensualidad
      </h1>
      <div class="relative">
        <div class="overflow-hidden" id="carrusel">
          <div class="flex transition-transform duration-300 ease-in-out">
            <% mensualidades.forEach(function(mensualidad, index) { %>
            <div class="w-full flex-shrink-0 px-2">
              <div
                class="bg-white rounded-lg shadow-md p-6 flex flex-col items-center justify-between h-80"
              >
                <h2 class="text-2xl font-bold text-gray-800 mb-2">
                  <%= mensualidad.tiempo_plan %>
                </h2>
                <p class="text-xl text-gray-600 mb-4">
                  $<%= mensualidad.total_pagar %>
                </p>
                <form action="/create-preference" method="POST" class="w-full">
                  <input
                    type="hidden"
                    class="tiempo"
                    name="title"
                    value="<%= mensualidad.tiempo_plan %>"
                  />
                  <input
                    type="hidden"
                    class="tiempo"
                    name="id_mensualidad"
                    value="<%= mensualidad.id %>"
                  />
                  <input
                    type="hidden"
                    class="total"
                    name="unit_price"
                    value="<%= mensualidad.total_pagar %>"
                  />
                  <input
                    type="hidden"
                    name="tempRegistroId"
                    value="<%= tempRegistroId %>"
                  />
                  <button
                    type="submit"
                    class="check-btn w-full bg-blue-600 text-white font-semibold py-2 px-4 rounded-md hover:bg-blue-700 transition duration-300 ease-in-out text-sm"
                  >
                    Seleccionar y pagar
                  </button>
                  <div
                    id="wallet_container_<%= index %>"
                    class="wallet-container hidden"
                  ></div>
                </form>
              </div>
            </div>
            <% }) %>
          </div>
        </div>
        <button
          id="prevBtn"
          class="absolute left-0 top-1/2 transform -translate-y-1/2 bg-white p-1 rounded-full shadow-sm text-gray-600 hover:bg-gray-100 focus:outline-none"
          onclick="moverCarrusel(-1)"
        >
          <svg
            class="w-5 h-5"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M15 19l-7-7 7-7"
            ></path>
          </svg>
        </button>
        <button
          id="nextBtn"
          class="absolute right-0 top-1/2 transform -translate-y-1/2 bg-white p-1 rounded-full shadow-sm text-gray-600 hover:bg-gray-100 focus:outline-none"
          onclick="moverCarrusel(1)"
        >
          <svg
            class="w-5 h-5"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M9 5l7 7-7 7"
            ></path>
          </svg>
        </button>
      </div>
    </div>
    <script>
      const carrusel = document.getElementById("carrusel");
      const items = carrusel.querySelector(".flex");
      let currentIndex = 0;
      let carruselInterval;

      function moverCarrusel(direccion) {
        const itemCount = items.children.length;
        currentIndex = (currentIndex + direccion + itemCount) % itemCount;
        items.style.transform = `translateX(-${currentIndex * 100}%)`;
      }

      function iniciarCarrusel() {
        carruselInterval = setInterval(() => {
          moverCarrusel(1);
        }, 10000);
      }

      function detenerCarrusel() {
        clearInterval(carruselInterval);
      }

      iniciarCarrusel();

      // Configuración de MercadoPago
      const mp = new MercadoPago(
        "APP_USR-4f711762-fd0f-4dd6-ae28-02c99c6090d6",
        { locale: "es-CO" }
      );

      // Manejar la selección y pago para cada botón
      document.querySelectorAll(".check-btn").forEach((button, index) => {
        button.addEventListener("click", async (event) => {
          event.preventDefault();
          detenerCarrusel();

          const form = button.closest("form");
          const title = form.querySelector('input[name="title"]').value;
          const unit_price = form.querySelector(
            'input[name="unit_price"]'
          ).value;
          const tempRegistroId = form.querySelector(
            'input[name="tempRegistroId"]'
          ).value;
          const id_mensualidad = form.querySelector(
            'input[name="id_mensualidad"]'
          ).value;

          console.log("Enviando datos a /create-preference:", {
            title,
            unit_price,
            tempRegistroId,
            id_mensualidad,
          });

          try {
            // Desactivar todos los botones para evitar múltiples selecciones
            document
              .querySelectorAll(".check-btn")
              .forEach((btn) => (btn.disabled = true));

            const response = await fetch("/create-preference", {
              method: "POST",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify({
                title,
                unit_price,
                tempRegistroId,
                id_mensualidad,
              }),
            });

            const preference = await response.json();
            console.log("Respuesta de /create-preference:", preference);

            if (preference.id) {
              console.log(
                "Preferencia creada correctamente con ID:",
                preference.id
              );
              const bricksBuilder = mp.bricks();

              // Ocultar todos los contenedores de wallet
              document
                .querySelectorAll(".wallet-container")
                .forEach((container) => {
                  container.classList.add("hidden");
                });

              // Mostrar solo el contenedor de wallet correspondiente
              const walletContainer = document.getElementById(
                `wallet_container_${index}`
              );
              walletContainer.classList.remove("hidden");

              await bricksBuilder.create(
                "wallet",
                `wallet_container_${index}`,
                {
                  initialization: {
                    preferenceId: preference.id,
                  },
                }
              );

              // Ocultar el botón "Seleccionar y pagar" actual
              button.style.display = "none";

              // Centrar el carrusel en el plan seleccionado
              items.style.transform = `translateX(-${index * 100}%)`;
              currentIndex = index;
            } else {
              throw new Error("No se recibió un ID de preferencia válido");
            }
          } catch (error) {
            console.error("Error al crear la preferencia:", error);
            alert(
              "Ocurrió un error al procesar tu pago. Por favor, intenta de nuevo."
            );
            iniciarCarrusel();
          } finally {
            // Reactivar los botones
            document
              .querySelectorAll(".check-btn")
              .forEach((btn) => (btn.disabled = false));
          }
        });
      });
    </script>
  </body>
</html>
