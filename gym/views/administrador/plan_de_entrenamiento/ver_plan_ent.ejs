<!-- <!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <!-- Tailwind CSS -->
     <link
     href="https://cdnjs.cloudflare.com/ajax/libs/tailwindcss/2.2.16/tailwind.min.css"
     rel="stylesheet"
   />
   <link rel="stylesheet" href="../../../src/output.css" />
   <link
     href="https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css"
     rel="stylesheet"
   />

    <title>Ver ventas</title>
  </head>
  <body>
    <%- include('../plantillas/navbar.ejs') %>

    <div class="px-10 mx-auto mt-4 p-5">
      <div class="flex justify-start gap-2 mb-4">
      <a href="/create_plan_ent"           class="btn mt-4 inline-flex items-center border-green-400 bg-green-600 text-white font-semibold py-2 px-4 rounded-md hover:bg-green-700"
      >
        <i class="bx bx-plus-circle br-md"></i> Crear Plan Entrenamiento
      </a>
      <a href="/index_admin" 
      class="btn mt-4 inline-flex items-center border border-red-400 bg-red-600 text-white font-semibold py-2 px-4 rounded-md hover:bg-red-700"
      >Volver</a>
    </div>
    <div class="max-w-7xl mx-auto p-4">
      <div class="overflow-x-auto">
          <table class="min-w-full table-auto text-xs
           sm:text-sm lg:text-base text-left text-gray-500
            dark:text-gray-400">
        <thead class="bg-gray-500 text-center">
          <tr class="text-white">
            <th scope="col" class="py-3 px-6">ID</th>
            <th scope="col" class="py-3 px-6">DIA</th>
            <th scope="col" class="py-3 px-6">CLIENTE</th>
            <th scope="col" class="py-3 px-6">GRUPO MUSCULAR</th>
            <th scope="col" class="py-3 px-6">ACTIVIDAD FISICA</th>
            <th scope="col" class="py-3 px-6">SERIES</th>
            <th scope="col" class="py-3 px-6">Repeticiones</th>
            <th scope="col" class="py-3 px-6">Acciones</th>
          </tr>
        </thead>
        <tbody class="bg-white divide-y divide-gray-200">
        </tbody>
      </table>
      <div id="pagination" class="w-full flex justify-center"></div>

    </div>

    <script defer>
      const divPagination = document.getElementById('pagination');
      let datos = [];
      const itemsPorPagina = 5;
    
      async function getData() {
        try {
          const response = await fetch('/verPlanEntrenamiento', {
            method: 'POST',
          });
    
          if (!response.ok) {
            throw new Error('La solicitud no fue exitosa: ' + response.statusText);
          }
    
          return await response.json();
        } catch (error) {
          console.error('Error al obtener datos:', error);
          return [];
        }
      }
    
      async function inicializar() {
        datos = await getData();
        console.log(datos);
    
        const totalPages = Math.ceil(datos.length / itemsPorPagina);
        generatePagination(totalPages);
        mostrarPagina(1);
      }
    
      function generatePagination(totalPages) {
        divPagination.innerHTML = Array.from({ length: totalPages }, (_, i) => 
          `<button class="border border-gray-300 bg-gray-500 hover:bg-gray-600 text-white font-semibold rounded-md px-3 py-1.5 m-1 transition duration-300 ease-in-out transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-gray-400 focus:ring-opacity-50 shadow-md" data-page="${i + 1}">${i + 1}</button>
`
        ).join('');
    
        divPagination.addEventListener('click', (e) => {
          if (e.target.tagName === 'BUTTON') {
            mostrarPagina(parseInt(e.target.dataset.page));
          }
        });
      }
    
      function mostrarPagina(numeroPagina) {
        const inicio = (numeroPagina - 1) * itemsPorPagina;
        const fin = inicio + itemsPorPagina;
        const datosParaMostrar = datos.slice(inicio, fin);
    
        const tbody = document.querySelector('tbody');
        tbody.innerHTML = datosParaMostrar.map((dato, index) => `
          <tr class="py-0    text-xm max-w-sm text-center  hover:bg-gray-100 ${index % 2 == 0 && "bg-gray-100"}">
            <td class="p-2">${dato.id_plan_entrenamiento}</td>
            <td class="p-2">${dato.dia}</td>
            <td class="p-2">${dato.nombre}</td>
            <td class="p-2">${dato.nombre_musculo}</td>
            <td class="p-2">${dato.nombre_ejercicio}</td>
            <td class="p-2">${dato.series}</td>
            <td class="p-2">${dato.repeticiones}</td>
            <td class="py-4 px-6">
              <a href="/actualizar_pe/${dato.id_plan_entrenamiento}"  class="px-2 py-1 bg-blue-500 text-white rounded-md
                               
                hover:bg-blue-700">Editar</a>
            </td>
          </tr>
        `).join('');
      }
    
      inicializar();
    </script>





    <script>
      // Obtener elementos del DOM
      const inputSearch = document.getElementById("inputSearch");
      const tableBody = document.getElementById("tableBody");

      // Función para filtrar la tabla
      function filterTable() {
        const filter = inputSearch.value.toUpperCase();
        const rows = tableBody.getElementsByTagName("tr");

        for (let i = 0; i < rows.length; i++) {
          const cells = rows[i].getElementsByTagName("td");
          let found = false;

          for (let j = 0; j < cells.length; j++) {
            if (cells[j].innerText.toUpperCase().indexOf(filter) > -1) {
              found = true;
              break;
            }
          }

          rows[i].style.display = found ? "" : "none";
        }
      }

      // Añadir evento al botón de búsqueda
      document
        .getElementById("searchButton")
        .addEventListener("click", filterTable);

      // Opcional: filtrar en tiempo real mientras se escribe
      inputSearch.addEventListener("keyup", filterTable);
    </script>
  </body>
</html> 
