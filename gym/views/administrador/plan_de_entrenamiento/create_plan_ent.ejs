<!DOCTYPE html>
<html lang="es">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <!-- Tailwind CSS -->
    <link
      rel="shortcut icon"
      href="https://raw.githubusercontent.com/JeanCardozo/audios/main/z.png"
    />
    <link
      href="https://cdnjs.cloudflare.com/ajax/libs/tailwindcss/2.2.16/tailwind.min.css"
      rel="stylesheet"
    />

    <script src="https://cdn.jsdelivr.net/npm/@fullcalendar/core@6.1.7/locales/es.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.15/index.global.min.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <link rel="stylesheet" href="../../../src/output.css" />
    <link
      href="https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css"
      rel="stylesheet"
    />

    <title>Crear plan de entrenamiento</title>

    <style>
      html,
      body {
        margin: 0;
        padding: 0;
        font-family: Arial, Helvetica Neue, Helvetica, sans-serif;
        font-size: 14px;
      }

      #external-events {
        position: fixed;
        z-index: 2;
        left: 1300px;
        width: 150px;
        padding: 0 10px;
        border: 1px solid #ccc;
        background: #eee;
      }

      #external-events .fc-event {
        cursor: move;
        margin: 3px 0;
      }

      #calendar-container {
        position: relative;
        z-index: 1;
        margin-left: 250px;
        width: 1000px;
      }

      #calendar {
        max-width: 1100px;
        margin: 20px auto;
        background-color: #eee;
      }
      #trash-button {
        position: absolute;
        top: 10px;
        right: 10px;
        background-color: #f00;
        border: none;
        padding: 10px;
        cursor: pointer;
      }

      #trash-button i {
        font-size: 24px;
        color: #fff;
      }
      .fc-event {
        transition: transform 0.4s ease-in-out;
      }

      .fc-event-selected {
        transform: scale(1.05); /* Escalar al 110% cuando está seleccionado */
      }
    </style>
  </head>

  <body class="bg-fondo">
    <%- include('../plantillas/navbar.ejs') %>
    <a
      href="/ver_plan_ent"
      class="inline-flex items-center justify-center py-4 px-6 text-white font-semibold rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-opacity-50 transition-colors duration-200"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        class="h-6 w-6"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M15 19l-7-7 7-7"
        />
      </svg>
    </a>

    <div id="external-events">
      <p>
        <strong>Draggable Events</strong>
      </p>
      <% if (actividades.length > 0) { %> <%
      actividades.forEach(function(actividad) { %>
      <div class="fc-event fc-h-event fc-daygrid-event fc-daygrid-block-event">
        <div class="fc-event-main"><%= actividad.nombre_ejercicio %></div>
      </div>
      <% }); %> <% } else { %>
      <p class="text-center text-gray-600 py-8">
        No hay actividades fisicas activas
      </p>
      <% } %>
    </div>
    <div id="calendar-container">
      <div id="calendar"></div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/@fullcalendar/core@6.1.7/locales/es.js"></script>
    <script>
      document.addEventListener("DOMContentLoaded", function () {
        var Calendar = FullCalendar.Calendar;
        var Draggable = FullCalendar.Draggable;

        var containerEl = document.getElementById("external-events");
        var calendarEl = document.getElementById("calendar");

        // Initialize external events
        function initExternalEvents() {
          new Draggable(containerEl, {
            itemSelector: ".fc-event",
            eventData: function (eventEl) {
              return {
                title: eventEl.innerText,
                id: eventEl.dataset.eventId, // or generate a unique ID here
              };
            },
          });
        }

        // Initialize calendar
        function initCalendar() {
          var calendar = new Calendar(calendarEl, {
            initialView: "dayGridWeek",
            height: 500,
            customButtons: {
              Borrar: {
                text: "Borrar",
                click: function () {
                  if (selectedEvent) {
                    selectedEvent.remove();
                    selectedEvent = null; // Resetear la variable
                  }
                },
              },
              Guardar: {
                text: "Guardar Plan",
                click: function () {
                  savePlanToDatabase(calendar);
                },
              },
            },
            headerToolbar: {
              left: "prev,next",
              center: "title",
              right: "Borrar Guardar",
            },
            locale: "es",
            editable: true,
            droppable: true,
            eventDurationEditable: false,
          });
          calendar.render();
          return calendar;
        }

        initExternalEvents();
        var calendar = initCalendar();

        // Variables para almacenar el evento seleccionado y su elemento DOM
        var selectedEvent = null;
        var selectedElement = null;

        // Agregar evento de clic al calendario
        calendar.on("eventClick", function (info) {
          // Si el evento seleccionado es el mismo que el clickeado, deseleccionarlo
          if (selectedEvent && selectedEvent.id === info.event.id) {
            selectedElement.classList.remove("fc-event-selected"); // Remover animación
            selectedEvent = null;
            selectedElement = null;
            return; // Salir de la función
          }

          // Si hay un evento previamente seleccionado, quitar su selección
          if (selectedElement) {
            selectedElement.classList.remove("fc-event-selected"); // Remover animación del evento anterior
          }

          // Seleccionar el nuevo evento
          selectedEvent = info.event;
          selectedElement = info.el;
          selectedElement.classList.add("fc-event-selected"); // Agregar animación
        });

        // Evento para detectar clic fuera de cualquier evento y deseleccionar
        document.addEventListener("click", function (e) {
          // Si el clic ocurre fuera de cualquier evento del calendario
          if (!e.target.closest(".fc-event") && selectedElement) {
            selectedElement.classList.remove("fc-event-selected"); // Remover la animación
            selectedEvent = null;
            selectedElement = null; // Limpiar las variables
          }
        });
        function savePlanToDatabase(calendar) {
          var events = calendar.getEvents();
          var planData = events.map(function (event) {
            return {
              title: event.title,
              start: event.start.toISOString(), // Convertir la fecha a un string ISO
              end: event.end ? event.end.toISOString() : null,
            };
          });

          fetch("/guardar_plan", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify(planData),
          })
            .then((response) => {
              if (!response.ok) {
                throw new Error(`HTTP error! Status: ${response.status}`);
              }
              return response.json();
            })
            .then((data) => {
              if (data.success) {
                alert("Plan de entrenamiento guardado con éxito");
              } else {
                alert("Error al guardar el plan de entrenamiento");
              }
            })
            .catch((error) => {
              console.error("Error:", error);
              alert("Error al guardar el plan de entrenamiento");
            });
        }
      });
    </script>
  </body>
</html>
