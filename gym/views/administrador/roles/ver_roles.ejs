<!DOCTYPE html>
<html lang="es">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <!-- Tailwind CSS -->
    <link
      rel="shortcut icon"
      href="https://raw.githubusercontent.com/JeanCardozo/audios/main/z.png"
    />
    <link
      href="https://cdnjs.cloudflare.com/ajax/libs/tailwindcss/2.2.16/tailwind.min.css"
      rel="stylesheet"
    />
    <link rel="stylesheet" href="../../../../src/output.css" />
    <link
      href="https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css"
      rel="stylesheet"
    />

    <style>
      .btn-confirmar {
        background-color: green;
        color: white;
      }
      .btn-confirmar:hover {
        background-color: #22c55e;
      }

      .btn-cancelar {
        background-color: red;
        color: white;
      }
      .btn-cancelar:hover {
        background-color: #c53222c4;
      }
    </style>

    <title>Ver roles</title>
  </head>
  <body class="bg-fondo">
    <%- include('../plantillas/navbar.ejs') %>

    <div class="px-10 mx-auto mt-4 p-5">
      <div class="flex justify-start gap-2 mb-4">
        <a
          href="#"
          class="btn mt-4 inline-flex items-center border-green-400 bg-green-600 text-white font-semibold py-2 px-4 rounded-md hover:bg-green-700"
          id="crearRolesBtn"
        >
          <i class="bx bx-plus-circle mr-2 br-md"></i>Crear Rol
        </a>
        <a
          href="/index_admin"
          class="btn mt-4 inline-flex items-center border border-red-400 bg-red-600 text-white font-semibold py-2 px-4 rounded-md hover:bg-red-700"
        >
          Volver
        </a>
      </div>

      <div class="max-w-7xl mx-auto p-4">
        <!-- Barra de búsqueda -->

        <div class="overflow-x-auto">
          <table
            class="min-w-full table-auto text-xs sm:text-sm lg:text-base text-left text-gray-500 dark:text-gray-400"
          >
            <thead class="bg-gray-400 text-white text-center">
              <tr>
                <th class="text-left py-3 px-6 uppercase font-semibold text-sm">
                  ID
                </th>
                <th class="py-4 px-6 uppercase font-semibold text-sm">ROLES</th>
                <th class="py-4 px-6 uppercase font-semibold text-sm">
                  ACCIONES
                </th>
              </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-200 text-center">
              <% let rowCounter = 0; %> <% results.forEach((roles) => { %>
              <tr
                class="text-center hover:bg-gray-100 <%= rowCounter % 2 < 1 ? 'bg-gray-100' : '' %>"
              >
                <td class="text-left py-3 px-4"><%= roles.id %></td>
                <td class="py-3 px-4"><%= roles.tipo_de_rol %></td>
                <td class="flex gap-2 rounded-md justify-center p-4">
                  <a
                    href="#"
                    class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-1 px-2 rounded updateRolesBtn"
                    data-id="<%= roles.id %>"
                  >
                    Editar
                  </a>
                  <a
                    onclick="verificar('<%= roles.id %>')"
                    class="cursor-pointer px-2 py-1 bg-red-500 text-white rounded-md hover:bg-red-700"
                  >
                    Borrar
                  </a>
                </td>
              </tr>
              <% rowCounter++; %> <% }) %>
            </tbody>
          </table>
        </div>
      </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <!-- JavaScript para la búsqueda -->
    <script>
      document.addEventListener("DOMContentLoaded", function () {
        const searchInput = document.getElementById("searchInput");
        const tableRows = document.querySelectorAll("tbody tr");

        searchInput.addEventListener("keyup", function () {
          const query = searchInput.value.toLowerCase();

          tableRows.forEach((row) => {
            const cellText = row.cells[1].textContent.toLowerCase();

            if (cellText.includes(query)) {
              row.style.display = "";
            } else {
              row.style.display = "none";
            }
          });
        });
      });
    </script>

    <!-- Modal para crear roles -->
    <script>
      document
        .getElementById("crearRolesBtn")
        .addEventListener("click", function (e) {
          e.preventDefault();
          Swal.fire({
            title: "Crear roles",
            html: `
              <form id="convenioForm" action="/crearRoles" method="post">
                <div class="mb-6">
                  <label for="rol" class="block mb-2 text-sm font-medium text-gray-900 dark:text-gray-400">Tipo de rol</label>
                  <input type="text" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg
                   focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600
                    dark:placeholder-gray-400 dark:text-white" id="rol" name="rol" required>
                </div>
              </form>
            `,
            confirmButtonClass: "btn-confirmar",
            cancelButtonClass: "btn-cancelar",
            customClass: {
              confirmButton: "btn-confirmar",
              cancelButton: "btn-cancelar",
            },
            showCancelButton: true,
            confirmButtonText: "Guardar",
            cancelButtonText: "Cancelar",
            preConfirm: () => {
              const rolInput = document.getElementById("rol");
              if (!rolInput.value) {
                // Mostrar un mensaje de error si el campo está vacío
                Swal.showValidationMessage("Por favor, ingrese un tipo de rol");
                return false; // No cerrar el modal
              } else {
                // Si el campo está lleno, enviamos el formulario
                document.getElementById("convenioForm").requestSubmit();
              }
            },
          });
        });
    </script>

    <!-- Modal para actualizar roles -->
    <script>
      document.querySelectorAll(".updateRolesBtn").forEach((button) => {
        button.addEventListener("click", function (e) {
          e.preventDefault();
          const rolId = this.dataset.id;

          fetch(`/actualizar/${rolId}`)
            .then((response) => response.json())
            .then((data) => {
              if (data.error) {
                Swal.fire("Error", data.error, "error");
              } else {
                Swal.fire({
                  title: "Actualizar Rol",
                  html: `
                    <form id="updateRolesForm" action="/updateRoles" method="post" class="space-y-4">
                    
                     <input type="hidden" class="mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300
                         rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500" id="id" name="id" value="${data.id}" required>
                      <div>
                        <label for="tipo_de_rol" class="block text-sm font-medium text-gray-700">Tipo de Rol</label>
                        <input type="text" class="mt-1 block w-full px-3 py-2 bg-gray-50 border border-gray-300
                         rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500" id="tipo_de_rol" name="tipo_de_rol" value="${data.tipo_de_rol}" required>
                      </div>
                    </form>
                  `,
                  confirmButtonClass: "btn-confirmar",
                  cancelButtonClass: "btn-cancelar",
                  customClass: {
                    confirmButton: "btn-confirmar",
                    cancelButton: "btn-cancelar",
                  },
                  showCancelButton: true,
                  confirmButtonText: "Actualizar",
                  cancelButtonText: "Cancelar",
                  preConfirm: () => {
                    const rolInput = document.getElementById("tipo_de_rol");
                    if (!rolInput.value) {
                      Swal.showValidationMessage(
                        "Por favor, ingrese un tipo de rol"
                      );
                      return false;
                    } else {
                      document
                        .getElementById("updateRolesForm")
                        .requestSubmit();
                    }
                  },
                });
              }
            })
            .catch((error) => {
              Swal.fire("Error", "No se pudo obtener la información.", "error");
            });
        });
      });
    </script>

    <script>
      function verificar(id) {
        Swal.fire({
          title: "¿Estás seguro?",
          text: "¡Esta acción no se puede deshacer!",
          icon: "warning",
          showCancelButton: true,
          confirmButtonClass: "btn-confirmar",
          cancelButtonClass: "btn-cancelar",
          customClass: {
            confirmButton: "btn-confirmar",
            cancelButton: "btn-cancelar",
          },
          showCancelButton: true,
          confirmButtonText: "Sí, Eliminar",
          cancelButtonText: "Cancelar",
        }).then((result) => {
          if (result.isConfirmed) {
            fetch(`/eliminarRol/${id}`)
              .then((response) => response.json())
              .then((data) => {
                if (data.success) {
                  Swal.fire({
                    title: "EL ROL SE HA ELIMINADO.",
                    text: "¡Esta acción no se puede deshacer!",
                    confirmButtonClass: "btn-confirmar",
                    customClass: {
                      confirmButton: "btn-confirmar",
                    },
                  }).then(() => {
                    location.reload("");
                  });
                } else {
                  Swal.fire("Error", data.error, "error");
                }
              })
              .catch((error) => {
                Swal.fire("Error", "No se pudo eliminar el rol.", "error");
              });
          }
        });
      }
    </script>

    <script>
      document.addEventListener("DOMContentLoaded", function () {
        // Verificar si hay un mensaje de alerta en la respuesta
        `<% if (typeof alertMessage !== 'undefined' && alertMessage) { %>`;
        Swal.fire({
          title: "Éxito",
          text: "<%= alertMessage.text %>",
          icon: "<%= alertMessage.type %>",
          confirmButtonText: "OK",
        }).then(() => {
          // Remover el parámetro de la URL después de mostrar la alerta
          const url = new URL(window.location);
          url.searchParams.delete("message");
          window.history.replaceState({}, "", url);
        });
        `<% } %>`;
      });
    </script>
  </body>
</html>
