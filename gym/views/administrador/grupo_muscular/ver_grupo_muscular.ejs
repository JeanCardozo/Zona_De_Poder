<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <!-- Tailwind CSS -->
    <link
      href="https://cdnjs.cloudflare.com/ajax/libs/tailwindcss/2.2.16/tailwind.min.css"
      rel="stylesheet"
    />
    <link rel="stylesheet" href="../../../src/output.css" />
    <link
      href="https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css"
      rel="stylesheet"
    />

    <style>
      .btn-confirmar {
        background-color: green;
        color: white;
      }
      .btn-confirmar:hover {
        background-color: #22C55E; 
      }
  
      .btn-cancelar {
        background-color: red; 
        color: white;
      }
      .btn-cancelar:hover {
        background-color: #c53222c4; 
      }
      </style>
    <title>Ver grupos musculares</title>
  </head>
  <body>
    <%- include('../plantillas/navbar.ejs') %>

    <div  class="px-10 mx-auto mt-4 p-5">
      <div class="flex justify-start gap-2 mb-4">
        <a
        href="#"
        class="btn mt-4 inline-flex items-center border-green-400 bg-green-600 text-white font-semibold py-2 px-4 rounded-md hover:bg-green-700"
        id="crearGrupoBtn">
        
        <i class="bx bx-plus-circle mr-2 br-md"></i>Crear Grupo muscular
        </a
      >
      <a
          href="/index_admin"
          class="btn mt-4 inline-flex items-center border border-red-400 bg-red-600 text-white font-semibold py-2 px-4 rounded-md hover:bg-red-700"
        >
          Volver
        </a>
      </div>
    </div>
      <div class="max-w-7xl mx-auto p-4">
        <div class="overflow-x-auto">
            <table class="min-w-full table-auto text-xs
             sm:text-sm lg:text-base text-left text-gray-500
              dark:text-gray-400">
        <thead class="bg-gray-500 text-white text-center">
          <tr>
            <th
              scope="col"
              class="px-4 py-6  text-xs font-medium uppercase tracking-wider"
            >
              ID
            </th>
            <th
              scope="col"
              class="px-4 py-6  text-xs font-medium uppercase tracking-wider"
            >
              NOMBRE
            </th>
            <th
              scope="col"
              class="px-4 py-6  text-xs font-medium uppercase tracking-wider"
            >
              SECCION
            </th>
            <th
              scope="col"
              class="px-4 py-6  text-xs font-medium uppercase tracking-wider"
            >
              ACCIONES
            </th>
          </tr>
        </thead>
        <tbody class="bg-white divide-y divide-gray-200 text-center">
          <% let rowCounter = 0; %> <% results.forEach((g_m) => { %>
          <tr
            class="hover:bg-gray-100 <%= rowCounter % 2 < 1 ? 'bg-gray-100' : '' %>"
          >
            <td class="px-6 py-4 whitespace-nowrap"><%= g_m.id %></td>
            <td class="px-6 py-4 whitespace-nowrap"><%= g_m.nombre%></td>
            <td class="px-6 py-4 whitespace-nowrap"><%= g_m.seccion%></td>
            <td class="px-6 py-4 whitespace-nowrap">
              <a
                      href="#"
                      class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-1 px-2 rounded updateGrupoBtn"
                      
                      data-id="<%= g_m.id %>"
                    >
                      Editar
                  </a>
            </td>
          </tr>
          <% rowCounter++; %> <% }) %>
        </tbody>
      </table>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
      const inputSearch = document.getElementById("inputSearch");
      const tableBody = document.getElementById("tableBody");

      function filterTable() {
        const filter = inputSearch.value.toUpperCase();
        const rows = tableBody.getElementsByTagName("tr");

        for (let i = 0; i < rows.length; i++) {
          const cells = rows[i].getElementsByTagName("td");
          let found = false;

          for (let j = 0; j < cells.length; j++) {
            if (cells[j].innerText.toUpperCase().indexOf(filter) > -1) {
              found = true;
              break;
            }
          }

          rows[i].style.display = found ? "" : "none";
        }
      }

      document
        .getElementById("searchButton")
        .addEventListener("click", filterTable);
      inputSearch.addEventListener("keyup", filterTable);
    </script>

<script>
  document
    .getElementById("crearGrupoBtn")
    .addEventListener("click", function (e) {
      e.preventDefault();
      Swal.fire({
        title: "Crear grupo muscular",
        html: `
        <form id="grupoForm" action="/crear_gm" method="post">
          <div class="mb-3">
              <div class="mb-3">
                <label for="id" class="form-label">ID</label>
                <input type="text" class="form-control" id="id" name="id" required>
              </div>
            <label for="sexo" class="form-label">Seccion del cuerpo</label>
              <select
                id="seccion"
                name="seccion"
                class="form-select"
                aria-label="Default select example"
                required
              >
                <option disabled selected>Seleccione una seccion</option>
                <option value="Tren Superior">Tren Superior</option>
                <option value="Tren Inferior">Tren Inferior</option>
              </select>
              
              <br><br>

            <label for="musculo" class="form-label">Grupo muscular</label>
            <input type="text" class="form-control" id="musculo" name="musculo" required>
            
              
          </div>

        </form>
      `,
        showCancelButton: true,
        confirmButtonText: "Guardar",
        cancelButtonText: "Cancelar",
        preConfirm: () => {
          document.getElementById("grupoForm").submit();
        },
      });
    });
</script>
<script>
  // Selecciona todos los botones de actualizar por clase o un atributo común
document.querySelectorAll(".updateGrupoBtn").forEach(button => {
  button.addEventListener("click", function (e) {
    e.preventDefault();
    const grupoId = this.dataset.id; // Obtén el ID del grupo muscular a actualizar

    // Realiza la solicitud GET para obtener los datos del grupo muscular
    fetch(`/actualizar_g/${grupoId}`)
      .then(response => response.json())  // Asegúrate de que la respuesta es JSON
      .then(data => {
        if (data.error) {
          Swal.fire("Error", data.error, "error");
        } else {
          Swal.fire({
            title: "Actualizar Grupo muscular",
            html: `
              <form id="updateRolesForm" action="/update_gm" method="post">
                <input type="hidden" name="id" value="${grupoId}">
                <div class="mb-3">
                  
                  
                  <label for="seccion" class="form-label">Seccion</label>
                  <select
                    name="seccion"
                    id="seccion"
                    class="form-select"
                    required
                  >
                    <option value="" disabled ${!data.seccion ? 'selected' : ''}>Seccion del cuerpo</option>
                    <option value="Tren superior" ${data.seccion === "Tren superior" ? 'selected' : ''}>Tren superior</option>
                    <option value="Tren inferior" ${data.seccion === "Tren inferior" ? 'selected' : ''}>Tren inferior</option>
                  </select>
                  <br>
                  <br>
                  <label for="musculo" class="form-label">grupo muscular</label>
                  <input type="text" class="form-control" id="musculo" name="musculo" value="${data.nombre}" required>
                </div>
              </form>
            `,
            showCancelButton: true,
            confirmButtonText: "Guardar",
            cancelButtonText: "Cancelar",
            preConfirm: () => {
              document.getElementById("updateRolesForm").submit();
            },
          });
        }
      })
      .catch(error => {
        console.error("Error:", error);
        Swal.fire("Error", "Ocurrió un error al obtener los datos del grupo muscular", "error");
      });
  });
});



</script>
  </body>
</html>
