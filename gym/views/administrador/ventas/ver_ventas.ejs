<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <!-- Tailwind CSS -->
    <link
      href="https://cdnjs.cloudflare.com/ajax/libs/tailwindcss/2.2.16/tailwind.min.css"
      rel="stylesheet"
    />
    <link rel="stylesheet" href="../../../src/output.css" />
    <link
      href="https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css"
      rel="stylesheet"
    />

    <title>Ver ventas</title>
  </head>
  <body class="bg-fondo">
    <%- include('../plantillas/navbar.ejs') %>

    <div class="px-10 mx-auto mt-4 p-5">
      <div class="flex justify-start gap-2 mb-4">
        <a
          href="/index_admin"
          class="btn mt-4 inline-flex items-center border border-red-400 bg-red-600 text-white font-semibold py-2 px-4 rounded-md hover:bg-red-700"
        >
          Volver</a
        >
    </div>

      <div class="max-w-7xl mx-auto p-4">
        <div class="overflow-x-auto">
            <table class="min-w-full table-auto text-xs
             sm:text-sm lg:text-base text-left text-gray-500
              dark:text-gray-400">        
            <thead class="text-center bg-gray-500 text-white">
          <tr>
            <th class="px-2 py-1">ID</th>
            <th class="px-2 py-1">IDENTIFICACION CLIENTE</th>
            <th class="px-2 py-1">NOMBRE</th>
            <th class="px-2 py-1">FECHA INICIO</th>
            <th class="px-2 py-1">FECHA FIN</th>
            <th class="px-2 py-1">TOTAL A PAGAR</th>
            <th class="px-2 py-1">TIPO MENSUALIDAD</th>
            <th class="px-2 py-1">TIEMPLO PLAN</th>
            <th class="px-2 py-1">ESTADO</th>
            <th class="px-2 py-1">ACCIONES</th>
          </tr>
        </thead>
        <tbody class="bg-white divide-y divide-gray-200 text-center">
         
        </tbody>
      </table>
      
    </div>
    <div id="pagination" class="w-full flex justify-center"></div>
    <script defer>
      const divPagination = document.getElementById('pagination');
      let datos = [];
      const itemsPorPagina = 5;
    
      async function getData() {
        try {
          const response = await fetch('/verVentass', {
            method: 'POST',
          });
    
          if (!response.ok) {
            throw new Error('La solicitud no fue exitosa: ' + response.statusText);
          }
    
          return await response.json();
        } catch (error) {
          console.error('Error al obtener datos:', error);
          return [];
        }
      }
    
      async function inicializar() {
        datos = await getData();
        console.log(datos);
    
        const totalPages = Math.ceil(datos.length / itemsPorPagina);
        generatePagination(totalPages);
        mostrarPagina(1);
      }
    
      function generatePagination(totalPages) {
        divPagination.innerHTML = Array.from({ length: totalPages }, (_, i) => 
          `<button class="border border-gray-300 bg-gray-500 hover:bg-gray-600 text-white font-semibold rounded-md px-3 py-1.5 m-1 transition duration-300 ease-in-out transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-gray-400 focus:ring-opacity-50 shadow-md" data-page="${i + 1}">${i + 1}</button>
    `
        ).join('');
    
        divPagination.addEventListener('click', (e) => {
          if (e.target.tagName === 'BUTTON') {
            mostrarPagina(parseInt(e.target.dataset.page));
          }
        });
      }
    
      function mostrarPagina(numeroPagina) {
        const inicio = (numeroPagina - 1) * itemsPorPagina;
        const fin = inicio + itemsPorPagina;
        const datosParaMostrar = datos.slice(inicio, fin);
    
        const tbody = document.querySelector('tbody');
        tbody.innerHTML = datosParaMostrar.map((dato, index) => `
          <tr class="py-0 text-xm max-w-sm text-center hover:bg-gray-100 ${index % 2 == 0 && "bg-gray-100"}">
            <td class="p-6">${dato.id_mensu_cliente}</td>
            <td class="p-6">${dato.id_cliente}</td>
            <td class="p-6">${dato.nombre}</td>
            <td class="p-6">${new Date(dato.fecha_inicio).toLocaleDateString()}</td>
            <td class="p-6">${new Date(dato.fecha_fin).toLocaleDateString()}</td>
            <td class="p-6">${dato.total_pagar}</td>
            <td class="p-6">${dato.tipo_de_mensualidad}</td>
            <td class="p-6">${dato.tiempo_plan}</td>
            <td class="p-6">${dato.estado}</td>
            <td class="p-6">
              <a
                id="estadoBtn-${dato.id_cliente}"
                class="block w-full px-2 py-1 text-xs font-medium rounded-full text-center truncate hover:text-clip"
                onclick="verificar('${dato.id_cliente}')"
              >
                Full
              </a>

            </td>
          </tr>
        `).join('');
    
        datosParaMostrar.forEach(dato => {
          const btn = document.getElementById(`estadoBtn-${dato.id_cliente}`);
          if (dato.estado === "Espera") {
            btn.classList.remove("bg-green-500");
            btn.classList.add("bg-yellow-500");
            btn.textContent = "Renovar";
          } else {
            btn.classList.add("bg-green-500");
          }
        });
      }
    
      inicializar();
    </script>
    
    
    
    
    
    
    
    
    
    
    
    
    <script>
      function verificar(id) {
        const swalWithBootstrapButtons = Swal.mixin({
          customClass: {
            confirmButton: "btn bg-green-500 text-white rounded-md px-4 py-2",
            cancelButton: "btn bg-red-500 text-white rounded-md px-4 py-2",
          },
          buttonsStyling: false,
        });

        swalWithBootstrapButtons
          .fire({
            title: "¿Estás seguro?",
            text: "¡No podrás revertir esto!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonText: "¡Sí, elimínalo!",
            cancelButtonText: "¡No, cancela!",
            reverseButtons: true,
          })
          .then((result) => {
            if (result.isConfirmed) {
              window.location.href = `/eliminar/${id}`;
            } else if (result.dismiss === Swal.DismissReason.cancel) {
              swalWithBootstrapButtons.fire({
                title: "Cancelado",
                text: "Tus datos están a salvo :)",
                icon: "error",
              });
            }
          });
      }
    </script>
  </body>
</html>
