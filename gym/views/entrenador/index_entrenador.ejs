<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link
      rel="shortcut icon"
      href="https://raw.githubusercontent.com/JeanCardozo/audios/main/z.png"
    />
    <!-- Tailwind CSS -->
    <link
      href="https://cdnjs.cloudflare.com/ajax/libs/tailwindcss/2.2.16/tailwind.min.css"
      rel="stylesheet"
    />
    <script src="https://cdn.jsdelivr.net/npm/@fullcalendar/core@6.1.7/locales/es.js"></script>

    <!-- Incluyendo Font Awesome desde CDN -->
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"
    />

    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.15/index.global.min.js"></script>
    <link
      href="https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css"
      rel="stylesheet"
    />

    <title>DashBoard Admin</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <style>
      .btn-confirmar {
        background-color: green;
        color: white;
      }
      .btn-confirmar:hover {
        background-color: #22c55e;
      }

      .btn-cancelar {
        background-color: red;
        color: white;
      }
      .btn-cancelar:hover {
        background-color: #c53222c4;
      }

      /* Estilo del contenedor del calendario */
      #calendari {
        border-radius: 10px;
        padding: 10px;
      }

      .event-tooltip {
        background-color: #fff;
        border: 1px solid #ccc;
        border-radius: 5px;
        padding: 10px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
        position: relative;
        z-index: 999;
      }

      .fc-event {
        background-color: #f0f0f0;
        color: black;
        border: 1px solid #e4e4e4;
        border-radius: 5px;
        padding: 5px;
      }

      .fc-event:hover {
        background-color: #e4e4e4;
        cursor: pointer;
      }

      .fc-toolbar {
        background-color: #f0f0f0;
        color: black;
        padding: 10px;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin-bottom: 10px;
      }

      .fc-toolbar .fc-prev-button,
      .fc-toolbar .fc-next-button {
        background-color: transparent;
        color: black;
        border: none;
        border-radius: 5px;
        padding: 5px 10px;
        cursor: pointer;
        transition: all 0.3s ease-in-out;
      }

      .fc-toolbar .fc-prev-button:hover,
      .fc-toolbar .fc-next-button:hover {
        background-color: transparent;
        color: black;
        transform: scale(1.5);
      }

      .crearEventoBtn {
        margin-left: 10px;
        background-color: #4caf50; /* Color verde */
        color: white; /* Color del texto */
        padding: 10px 20px; /* Espaciado interno */
        border-radius: 5px; /* Esquinas redondeadas */
        text-decoration: none; /* Sin subrayado */
      }

      .fc-title {
        font-size: 1.5em;
        font-weight: bold;
      }

      .fc-day {
        background-color: white;
        border: 2px solid #e0e0e0;
      }

      .fc-day:hover {
        background-color: #f5f5f5;
      }
    </style>
  </head>
  <body class="bg-fondo">
    <%- include('./plantillas/navbarentre.ejs') %>
    <div
      id="overlay"
      class="fixed inset-0 bg-black bg-opacity-50 hidden z-40"
    ></div>

    <div class="container mx-auto 1px-4 py-8">
      <div class="grid grid-cols-1 md:grid-cols-3 gap-4 max-w-6xl mx-auto">
        <div class="bg-white p-4 rounded-lg shadow" id="mensajeErrorIngresos">
          <h2 class="text-lg font-bold mb-4 text-gray-700 text-center">
            Resumen de ingresos diarios
          </h2>
          <div class="h-64">
            <canvas id="myCharts"></canvas>
          </div>
        </div>

        <!-- Fila 2 -->
        <div class="2 bg-white p-4 rounded-lg shadow">
          <h2 class="text-lg font-semibold mb-4 text-gray-800 text-center">
            <% if (datosVentasVencidas.length > 0) { %> Resumen de Mensualidades
            Vencidas <% } %>
          </h2>
          <div class="overflow-x-auto">
            <table class="min-w-full table-auto text-sm text-gray-500">
              <thead class="bg-gray-200 text-gray-700">
                <tr>
                  <th class="py-2 px-3 text-left">Nombre</th>
                  <th class="py-2 px-3">Fecha vencimiento</th>
                  <th class="py-2 px-3">Renovar</th>
                </tr>
              </thead>
              <tbody>
                <% if (datosVentasVencidas.length > 0) { %> <%
                datosVentasVencidas.forEach((mensusven) => { %>
                <tr>
                  <td class="py-4 px-5"><%= mensusven.nombre %></td>
                  <td class="py-4 px-5 text-center">
                    <%= new
                    Date(mensusven.fecha_fin).toLocaleDateString('es-ES', {
                    year: 'numeric', month: 'long', day: 'numeric' }) %>
                  </td>

                  <td class="py-4 px-5 text-center">
                    <a
                      href="#"
                      class="bg-green-500 text-white font-bold py-1 px-3 rounded text-xs renovar-btn"
                      data-id="<%=mensusven.id%>"
                      >Renovar</a
                    >
                  </td>
                </tr>
                <% }); %> <% } else { %>
                <tr>
                  <td
                    colspan="4"
                    class="py-10 text-center text-lg font-semibold text-gray-600"
                  >
                    <i
                      class="fas fa-times-circle text-red-500 text-4xl mb-4"
                    ></i>
                    <div>No hay mensualidades vencidas este mes</div>
                  </td>
                </tr>
                <% } %>
              </tbody>
            </table>
          </div>
        </div>

        <!-- Calendario -->
        <div class="col-span-2 bg-white p-4 rounded-lg shadow">
          <div id="calendari" class="w-full"></div>
        </div>
      </div>
    </div>

    <script>
      document.querySelectorAll(".crearEventoBtn").forEach((btn) => {
        btn.addEventListener("click", function (e) {
          e.preventDefault();

          Swal.fire({
            title: "Agregar un evento",
            html: `
              <form id="crearEventoform" action="/crear_evento" method="post" class="space-y-4">
                <div class="mb-4">
                  <label for="Evento" class="block text-xl font-medium text-gray-700">Evento</label>
                  <input type="text" name="evento"id="evento" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg
                   focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600
                    dark:placeholder-gray-400 dark:text-white" id="rol" name="rol" required />

<label for="fecha" class="block text-xl font-medium text-gray-700">Fecha</label>
<input type="datetime-local" id="fecha" name="fecha" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg
      focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600
      dark:placeholder-gray-400 dark:text-white" required />

                </div>
              </form>
            `,
            showCancelButton: true,
            confirmButtonClass: "btn-confirmar",
            cancelButtonClass: "btn-cancelar",
            customClass: {
              confirmButton: "btn-confirmar",
              cancelButton: "btn-cancelar",
            },
            confirmButtonText: "Guardar",
            cancelButtonText: "Cancelar",
            preConfirm: () => {
              document.getElementById("crearEventoform").submit();
            },
          });
        });
      });
    </script>

    <script>
      document.querySelectorAll(".renovar-btn").forEach((btn) => {
        btn.addEventListener("click", function (e) {
          e.preventDefault();
          const idMensualidad = this.getAttribute("data-id");

          console.log("id mensualidad", idMensualidad);

          Swal.fire({
            title: "Renovar mensualidad",
            html: `
              <form id="renovarform" action="/renovar_cliente" method="post" class="space-y-4">
                <input type="hidden" name="id" value="${idMensualidad}" />

                <div class="mb-4">
                  <label for="mensualidad" class="block text-sm font-medium text-gray-700">MENSUALIDADES</label>
                  <select id="mensualidad" name="mensualidad" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5" required>
                    <option disabled selected>Seleccione una mensualidad</option>
                    <% datosMensualidades.forEach(function(mensual) { %>
                      <option value="<%= mensual.id %>"><%= mensual.total_pagar %> - <%= mensual.tiempo_plan %></option>
                    <% }) %>
                  </select>
                </div>
              </form>
            `,
            showCancelButton: true,
            confirmButtonClass: "btn-confirmar",
            cancelButtonClass: "btn-cancelar",
            customClass: {
              confirmButton: "btn-confirmar",
              cancelButton: "btn-cancelar",
            },
            confirmButtonText: "Guardar",
            cancelButtonText: "Cancelar",
            preConfirm: () => {
              const selectMensualidad = document.getElementById("mensualidad");
              if (
                selectMensualidad.value === "" ||
                selectMensualidad.value === "Seleccione una mensualidad"
              ) {
                Swal.showValidationMessage(
                  "Por favor seleccione una mensualidad válida"
                );
                return false; // Evitar el envío del formulario
              } else {
                document.getElementById("renovarform").requestSubmit();
              }
            },
          });
        });
      });
    </script>

    <div id="overlay" class="fixed inset-0 bg-black bg-opacity-50 hidden"></div>

    <div
      id="loginContainer"
      class="fixed inset-0 flex items-center justify-center hidden z-50"
    >
      <form
        id="formularioValidacion"
        class="relative bg-white p-8 rounded-lg shadow-lg max-w-sm w-full"
        action="/registrarIngresoentre"
        method="POST"
      >
        <!-- Botón de escape -->
        <button
          id="closeButton"
          type="button"
          class="absolute top-2 left-2 text-gray-500 hover:text-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500 rounded-full"
        >
          &#x2715;
        </button>

        <label
          for="campoTexto"
          class="block text-lg font-semibold text-gray-700 mb-4"
          style="font-family: 'Montserrat', sans-serif; color: #2c3e50"
        >
          INGRESE CONTRASEÑA DESPUÉS DEL *
        </label>
        <input
          type="text"
          id="campoTexto"
          name="identificacion"
          required
          class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
        />
        <input type="submit" style="display: none" />
      </form>
    </div>

    <script>
      document.addEventListener("DOMContentLoaded", function() {
          // Obtener los datos del backend, asegurando que no sean undefined
          const datosSumaPorMes = <%- typeof datosSumaPorMes !== 'undefined' ? JSON.stringify(datosSumaPorMes) : '[]' %>;
          const dataIngresadosHoy = <%- typeof datosIngresosHoy !== 'undefined' ? JSON.stringify(datosIngresosHoy) : '0' %>;

          // Procesar los datos para el gráfico de ingresos
          const labelsIngresos = ['Hoy']; // Label único para el día actual
          const dataIngresos = dataIngresadosHoy; // Total de ingresos del día actual
          const totalIngresosHoy = dataIngresos.length;

          if (dataIngresadosHoy == 0) {
              document.getElementById("mensajeErrorIngresos").innerHTML = `
                <tr>
                  <td colspan="4" class="py-10 text-center text-lg font-semibold text-gray-600">
                    <i class="fas fa-times-circle text-red-500 text-4xl mb-4"></i>
                    <div>Todavía no hay ingresos el día de hoy</div>
                  </td>
                </tr>`;
          } else {
              // Configuración del gráfico para Ingresos
              const ctxIngresos = document.getElementById("myCharts").getContext("2d");
              new Chart(ctxIngresos, {
                  type: "doughnut",
                  data: {
                      labels: labelsIngresos,
                      datasets: [
                          {
                              label: "Ingresos de Hoy",
                              data: [totalIngresosHoy],
                              backgroundColor: [
                                  'rgb(255, 99, 132)',
                                  'rgb(54, 162, 235)',
                                  'rgb(255, 205, 86)'
                              ],
                              borderColor: 'rgba(255, 99, 132, 1)', // Color del borde
                              borderWidth: 1,
                          },
                      ],
                  },
                  plugins: [plugin],
              });
          }
      });

      const plugin = {
          id: 'customCanvasBackgroundColor',
          beforeDraw: (chart, args, options) => {
              const {ctx} = chart;
              ctx.save();
              ctx.globalCompositeOperation = 'destination-over';
              ctx.fillStyle = options.color || '#fff';
              ctx.fillRect(0, 0, chart.width, chart.height);
              ctx.restore();
          }
      };
    </script>

    <script>
      document.addEventListener("keydown", function (e) {
        if (e.key === "*") {
          e.preventDefault();
          const campoTexto = document.getElementById("campoTexto");
          campoTexto.value = "*"; // Añadir el '*' automáticamente en el campo de texto

          // Mostrar y enfocar el formulario
          document.getElementById("overlay").classList.remove("hidden");
          document.getElementById("loginContainer").classList.remove("hidden");
          campoTexto.focus(); // Enfocar el campo de texto
        }
      });

      document
        .getElementById("campoTexto")
        .addEventListener("keydown", function (e) {
          if (e.key === "Enter") {
            e.preventDefault(); // Prevenir el comportamiento por defecto de Enter
            const identificacionConAsterisco =
              document.getElementById("campoTexto").value;

            // Validar que el campo no esté vacío después de *
            if (identificacionConAsterisco === "*") {
              alert("Debe ingresar su identificación después del *");
            } else {
              // Enviar la identificación completa como contraseña al backend
              document.getElementById("formularioValidacion").submit();
            }
          }
        });

      // Cerrar el formulario al hacer clic en el botón de escape
      document
        .getElementById("closeButton")
        .addEventListener("click", function () {
          document.getElementById("overlay").classList.add("hidden");
          document.getElementById("loginContainer").classList.add("hidden");
        });
    </script>

    <% if (typeof alert !== "undefined") { %>
    <script>
      document.addEventListener("DOMContentLoaded", function () {
        // Reproducir el sonido antes de mostrar la alerta
        const sonido = "<%= typeof sonido !== 'undefined' ? sonido : '' %>";
        if (sonido) {
          const audio = new Audio(sonido);
          audio.play().catch((error) => {
            console.error("Error al reproducir el sonido:", error);
          });
        }

        // Mostrar la alerta de SweetAlert2
        Swal.fire({
          title: "<%= alertTitle %>",
          text: "<%= alertMessage %>",
          icon: "<%= alertIcon %>",
          showConfirmButton: true, // El usuario debe presionar OK
        }).then(() => {
          // Redirigir después de que el usuario presione OK
          const ruta = "<%= typeof ruta !== 'undefined' ? ruta : '' %>";
          if (ruta) {
            window.location.href = ruta;
          }
        });
      });
    </script>

    <!-- GRAFICOS -->
    <% } %>
    <script>
      document.addEventListener("DOMContentLoaded", function () {
        var calendarEl = document.getElementById("calendari");
        var calendar = new FullCalendar.Calendar(calendarEl, {
          initialView: "dayGridMonth",
          headerToolbar: {
            left: "prev,next",
            center: "title",
            right: "customButton", // Agregamos un botón personalizado
          },
          customButtons: {
            customButton: {
              text: "Agregar",
              click: function () {
                Swal.fire({
                  title: "Agregar un evento",
                  html: `
                                <form id="crearEventoform" action="/crear_evento" method="post" class="space-y-4">
                                    <div class="mb-4">
                                        <label for="evento" class="block text-xl font-medium text-gray-700">Evento</label>
                                        <input type="text" name="evento" id="evento" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg
                                            focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600
                                            dark:placeholder-gray-400 dark:text-white" required />

                                        <label for="fecha" class="block text-xl font-medium text-gray-700">Fecha</label>
<input type="datetime-local" id="fecha" name="fecha" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg
      focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600
      dark:placeholder-gray-400 dark:text-white" required />

                                    </div>
                                </form>
                            `,
                  showCancelButton: true,
                  confirmButtonClass: "btn-confirmar",
                  cancelButtonClass: "btn-cancelar",
                  customClass: {
                    confirmButton: "btn-confirmar",
                    cancelButton: "btn-cancelar",
                  },
                  confirmButtonText: "Guardar",
                  cancelButtonText: "Cancelar",
                  preConfirm: () => {
                    // Aquí se envía el formulario si se confirma
                    document.getElementById("crearEventoform").submit();
                  },
                });
              },
              classNames: ["btn-agregar"], // Clases para los estilos
            },
          },
          locale: "es",
          events: function (fetchInfo, successCallback, failureCallback) {
            fetch("/events")
              .then((response) => response.json())
              .then((data) => successCallback(data))
              .catch((error) => {
                console.error("Error al obtener eventos:", error);
                failureCallback(error);
              });
          },
        });

        calendar.render();

        calendar.on("eventMouseEnter", function (info) {
          var tooltip = document.createElement("div");
          tooltip.className = "event-tooltip";
          tooltip.innerHTML = `
                <strong>${info.event.title}</strong><br>
                Fecha: ${info.event.start.toLocaleString()}<br>
                Descripción: ${
                  info.event.extendedProps.description || "Sin descripción"
                }
            `;
          document.body.appendChild(tooltip);

          // Posicionar el tooltip
          tooltip.style.position = "absolute";
          tooltip.style.left = `${info.jsEvent.pageX + 5}px`;
          tooltip.style.top = `${info.jsEvent.pageY + 5}px`;

          // Al salir del mouse, eliminar el tooltip
          info.el.addEventListener("mouseleave", function () {
            document.body.removeChild(tooltip);
          });
        });
      });
    </script>
  </body>
</html>
